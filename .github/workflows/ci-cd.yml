name: CI-CD

# main 브랜치에 푸시될 때마다 동작
on:
  push:
    branches: [ main ]

jobs:
  build-and-push:
    name: Build & Push to ECR
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'temurin'

      - name: Build Docker image
        # 멀티스테이지 Dockerfile을 이용해 빌드 → JAR까지 포함
        run: |
          IMAGE_URI=${{ secrets.ECR_URI }}:latest
          docker build . -t $IMAGE_URI

      - name: Login to ECR
        uses: aws-actions/amazon-ecr-login@v1
        env:
          AWS_REGION: ${{ secrets.AWS_REGION }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}


      - name: Push to ECR
        run: |
          IMAGE_URI=${{ secrets.ECR_URI }}:latest
          docker push $IMAGE_URI

  deploy-to-ec2:
    name: Deploy on EC2
    needs: build-and-push
    runs-on: ubuntu-latest

    steps:
      - name: SSH and deploy via docker-compose
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            cd /home/${{ secrets.EC2_USER }}/tcg-backend
            # 최신 이미지 받아오기
            docker-compose pull
            # 백그라운드 모드로 실행
            docker-compose up -d